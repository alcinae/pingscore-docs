openapi: 3.0.1
info:
  title: PINGSCORE BACKEND API
  version: "1.0"
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - bearerAuth: []
paths:
  /api/user/update/{userId}:
    put:
      tags:
        - user-controller
      operationId: update
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/tournament/update/{tournamentId}:
    put:
      tags:
        - tournament-controller
      operationId: update_1
      parameters:
        - name: tournamentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tournament'
  /api/team/update/{teamId}:
    put:
      tags:
        - team-controller
      operationId: update_2
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team'
  /api/role/update/{roleId}:
    put:
      tags:
        - role-controller
      operationId: update_3
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
  /api/player/update/{playerId}:
    put:
      tags:
        - player-controller
      operationId: update_4
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Player'
  /api/match/update/{matchId}:
    put:
      tags:
        - match-controller
      operationId: update_5
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Match'
  /api/match/start/{matchId}/with/{firstServe}:
    put:
      tags:
        - match-controller
      operationId: start
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: firstServe
          in: path
          required: true
          schema:
            type: string
            enum:
              - LOCAL
              - VISITOR
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Match'
  /api/match/setServer/{matchId}/to/{side}:
    put:
      tags:
        - match-controller
      operationId: setServer
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: side
          in: path
          required: true
          schema:
            type: string
            enum:
              - LOCAL
              - VISITOR
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Match'
  /api/match/cancelPoint/{matchId}/to/{side}:
    put:
      tags:
        - match-controller
      operationId: cancelPoint
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: side
          in: path
          required: true
          schema:
            type: string
            enum:
              - LOCAL
              - VISITOR
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Match'
  /api/match/addPoint/{matchId}/to/{side}:
    put:
      tags:
        - match-controller
      operationId: addPoint
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: side
          in: path
          required: true
          schema:
            type: string
            enum:
              - LOCAL
              - VISITOR
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Match'
  /api/category/update/{categoryId}:
    put:
      tags:
        - category-controller
      operationId: update_6
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
  /api/advertisement/update/{advertisementId}:
    put:
      tags:
        - advertisement-controller
      operationId: update_7
      parameters:
        - name: advertisementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advertisement'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Advertisement'
  /api/user/create:
    post:
      tags:
        - user-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/tournament/initialize/{tournamentId}/courts/{nbCourtsToGenerate}:
    post:
      tags:
        - tournament-controller
      operationId: initialize
      parameters:
        - name: tournamentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: nbCourtsToGenerate
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tournament'
  /api/tournament/create:
    post:
      tags:
        - tournament-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tournament'
  /api/team/create:
    post:
      tags:
        - team-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team'
  /api/signup:
    post:
      tags:
        - authentification-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/role/create:
    post:
      tags:
        - role-controller
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
  /api/player/create:
    post:
      tags:
        - player-controller
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Player'
  /api/match/create:
    post:
      tags:
        - match-controller
      operationId: create_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Match'
  /api/login:
    post:
      tags:
        - authentification-controller
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: string
  /api/category/create:
    post:
      tags:
        - category-controller
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
  /api/advertisement/create:
    post:
      tags:
        - advertisement-controller
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advertisement'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Advertisement'
  /api/user/findByName/{userName}:
    get:
      tags:
        - user-controller
      operationId: findByName
      parameters:
        - name: userName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/user/findById/{userId}:
    get:
      tags:
        - user-controller
      operationId: findById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/user/findAll:
    get:
      tags:
        - user-controller
      operationId: findAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/tournament/findByName/{tournamentName}:
    get:
      tags:
        - tournament-controller
      operationId: findByName_1
      parameters:
        - name: tournamentName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tournament'
  /api/tournament/findById/{tournamentId}:
    get:
      tags:
        - tournament-controller
      operationId: findById_1
      parameters:
        - name: tournamentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tournament'
  /api/tournament/findAll:
    get:
      tags:
        - tournament-controller
      operationId: findAll_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Tournament'
  /api/team/findByName/{teamName}:
    get:
      tags:
        - team-controller
      operationId: findByName_2
      parameters:
        - name: teamName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team'
  /api/team/findById/{teamId}:
    get:
      tags:
        - team-controller
      operationId: findById_2
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team'
  /api/team/findAll:
    get:
      tags:
        - team-controller
      operationId: findAll_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Team'
  /api/role/findByName/{roleName}:
    get:
      tags:
        - role-controller
      operationId: findByName_3
      parameters:
        - name: roleName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
  /api/role/findById/{roleId}:
    get:
      tags:
        - role-controller
      operationId: findById_3
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
  /api/role/findAll:
    get:
      tags:
        - role-controller
      operationId: findAll_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Role'
  /api/player/findById/{playerId}:
    get:
      tags:
        - player-controller
      operationId: findById_4
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Player'
  /api/player/findAll:
    get:
      tags:
        - player-controller
      operationId: findAll_4
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Player'
  /api/match/findById/{matchId}:
    get:
      tags:
        - match-controller
      operationId: findById_5
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Match'
  /api/match/findAll:
    get:
      tags:
        - match-controller
      operationId: findAll_5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Match'
  /api/category/findByName/{categoryName}:
    get:
      tags:
        - category-controller
      operationId: findByName_4
      parameters:
        - name: categoryName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
  /api/category/findById/{categoryId}:
    get:
      tags:
        - category-controller
      operationId: findById_6
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
  /api/category/findAll:
    get:
      tags:
        - category-controller
      operationId: findAll_6
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /api/advertisement/findByName/{advertisementName}:
    get:
      tags:
        - advertisement-controller
      operationId: findByName_5
      parameters:
        - name: advertisementName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Advertisement'
  /api/advertisement/findById/{advertisementId}:
    get:
      tags:
        - advertisement-controller
      operationId: findById_7
      parameters:
        - name: advertisementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Advertisement'
  /api/advertisement/findAll:
    get:
      tags:
        - advertisement-controller
      operationId: findAll_7
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Advertisement'
  /api/user/delete/{userId}:
    delete:
      tags:
        - user-controller
      operationId: delete
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /api/tournament/delete/{tournamentId}:
    delete:
      tags:
        - tournament-controller
      operationId: delete_1
      parameters:
        - name: tournamentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /api/team/delete/{teamId}:
    delete:
      tags:
        - team-controller
      operationId: delete_2
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /api/role/delete/{roleId}:
    delete:
      tags:
        - role-controller
      operationId: delete_3
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /api/player/delete/{playerId}:
    delete:
      tags:
        - player-controller
      operationId: delete_4
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /api/match/delete/{matchId}:
    delete:
      tags:
        - match-controller
      operationId: delete_5
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /api/category/delete/{categoryId}:
    delete:
      tags:
        - category-controller
      operationId: delete_6
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /api/advertisement/delete/{advertisementId}:
    delete:
      tags:
        - advertisement-controller
      operationId: delete_7
      parameters:
        - name: advertisementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    Role:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    User:
      required:
        - password
        - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        enabled:
          type: boolean
        username:
          maxLength: 50
          minLength: 0
          type: string
        password:
          maxLength: 120
          minLength: 0
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Advertisement:
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        name:
          maxLength: 50
          minLength: 3
          type: string
        sourceUrl:
          pattern: "(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\\
            .[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\\
            /\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\\
            s]{2,})"
          type: string
        enabled:
          type: boolean
        tournament:
          $ref: '#/components/schemas/Tournament'
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Court:
      type: object
      properties:
        id:
          type: integer
          format: int64
        match:
          $ref: '#/components/schemas/Match'
        streamLink:
          type: string
        tournament:
          $ref: '#/components/schemas/Tournament'
    Match:
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        startTime:
          type: string
          format: date-time
        localPlayer:
          $ref: '#/components/schemas/Player'
        visitorPlayer:
          $ref: '#/components/schemas/Player'
        phase:
          type: string
        state:
          type: string
          enum:
            - UNSTARTED
            - ONGOING
            - DONE
        score:
          type: array
          items:
            $ref: '#/components/schemas/Round'
        currentServe:
          type: string
          enum:
            - LOCAL
            - VISITOR
        winBy:
          $ref: '#/components/schemas/Player'
        tournament:
          $ref: '#/components/schemas/Tournament'
        done:
          type: boolean
        started:
          type: boolean
        notStarted:
          type: boolean
    Player:
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        team:
          $ref: '#/components/schemas/Team'
        ranking:
          type: string
        pictureUrl:
          type: string
    Round:
      type: object
      properties:
        id:
          type: integer
          format: int64
        localPlayerScore:
          type: integer
          format: int32
        visitorPlayerScore:
          type: integer
          format: int32
        state:
          type: string
          enum:
            - UNSTARTED
            - ONGOING
            - DONE
        done:
          type: boolean
        started:
          type: boolean
        notStarted:
          type: boolean
    Team:
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        name:
          type: string
    Tournament:
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        posterUrl:
          type: string
        streamLink:
          type: string
        startTime:
          type: string
          format: date-time
        localTeam:
          $ref: '#/components/schemas/Team'
        visitorTeam:
          $ref: '#/components/schemas/Team'
        courtList:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Court'
        matchList:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Match'
        adList:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Advertisement'
  securitySchemes:
    bearerAuth:
      type: http
      name: bearerAuth
      scheme: bearer
      bearerFormat: JWT
